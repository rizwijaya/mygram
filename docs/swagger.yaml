basePath: /
definitions:
  api.Meta:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  api.Response:
    properties:
      data: {}
      meta:
        $ref: '#/definitions/api.Meta'
    type: object
  domain.InsertComment:
    properties:
      message:
        type: string
      photo_id:
        type: integer
    required:
    - message
    - photo_id
    type: object
  domain.InsertPhoto:
    properties:
      caption:
        type: string
      photo_url:
        type: string
      title:
        type: string
    required:
    - caption
    - photo_url
    - title
    type: object
  domain.InsertSocialMedia:
    properties:
      name:
        type: string
      social_media_url:
        type: string
    required:
    - name
    - social_media_url
    type: object
  domain.LoginUserInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    type: object
  domain.RegisterUserInput:
    properties:
      age:
        minimum: 8
        type: integer
      confirm_password:
        minLength: 6
        type: string
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - confirm_password
    - email
    - password
    - username
    type: object
  domain.UpdateComment:
    properties:
      message:
        type: string
      photo_id:
        type: integer
    type: object
  domain.UpdatePhoto:
    properties:
      caption:
        type: string
      photo_url:
        type: string
      title:
        type: string
    type: object
  domain.UpdateSocialMedia:
    properties:
      name:
        type: string
      social_media_url:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: admin@rizwijaya.com
    name: Swagger API Team
  description: This is a sample server for a MyGram.
  termsOfService: http://swagger.io/terms/
  title: MyGram API
  version: 1.0.0
paths:
  /api/v1/comments:
    post:
      consumes:
      - application/json
      description: Create Comment
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.InsertComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Create Comment
      tags:
      - Comments
  /api/v1/comments/{id_photos}:
    get:
      consumes:
      - application/json
      description: Get All Comments
      parameters:
      - description: Id Photos
        in: path
        name: id_photos
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get All Comments
      tags:
      - Comments
  /api/v1/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Comment
      parameters:
      - description: Id Comment
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Delete Comment
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Update Comment
      parameters:
      - description: Id Comment
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Update Comment
      tags:
      - Comments
  /api/v1/comments/id/{id}:
    get:
      consumes:
      - application/json
      description: Get Comment By Id
      parameters:
      - description: Id Comment
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get Comment By Id
      tags:
      - Comments
  /api/v1/media:
    get:
      consumes:
      - application/json
      description: Get All Social Media
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get All Social Media
      tags:
      - Social Media
    post:
      consumes:
      - application/json
      description: Create Social Media
      parameters:
      - description: Create Social Media
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/domain.InsertSocialMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Create Social Media
      tags:
      - Social Media
  /api/v1/media/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Social Media
      parameters:
      - description: Social Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Delete Social Media
      tags:
      - Social Media
    get:
      consumes:
      - application/json
      description: Get One Social Media
      parameters:
      - description: Social Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get One Social Media
      tags:
      - Social Media
    put:
      consumes:
      - application/json
      description: Update Social Media
      parameters:
      - description: Social Media ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Social Media
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateSocialMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Update Social Media
      tags:
      - Social Media
  /api/v1/photos:
    get:
      consumes:
      - application/json
      description: Get All Photos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get All Photos
      tags:
      - Photos
    post:
      consumes:
      - application/json
      description: Create Photo
      parameters:
      - description: Input Create Photo
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.InsertPhoto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Create Photo
      tags:
      - Photos
  /api/v1/photos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Photo
      parameters:
      - description: Id Photo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Delete Photo
      tags:
      - Photos
    get:
      consumes:
      - application/json
      description: Get Photo By ID
      parameters:
      - description: Id Photo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Get Photo By ID
      tags:
      - Photos
    put:
      consumes:
      - application/json
      description: Update Photo
      parameters:
      - description: Id Photo
        in: path
        name: id
        required: true
        type: string
      - description: Input Update Photo
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePhoto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerAuth: []
      summary: Update Photo
      tags:
      - Photos
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: Login User Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.LoginUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Login User
      tags:
      - Users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: Register User Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Register User
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
